<?php defined('T')||define('T',true);defined('F')||define('F',false);if(!defined('BASEPATH')){if(!headers_sent()){header('HTTP/1.1 404 Not Found',T,404);}exit('No direct script access allowed');}class Template_Base{protected static $s='',$p='';protected $r='[a-zA-Z_][a-zA-Z0-9_]*';protected function is_varname($v){if(!is_string($v)||!preg_match('/^'.$this->r.'$/',$v)){return F;}return T;}public function view_exists($v){if(!is_string($v)){return F;}$f='views/'.self::$s.self::$p.$v.EXT;$f=defined('MODBASE')?MODBASE.$this->C->uri->segment(2).'/'.$f:APPPATH.$f;return file_exists($f);}protected function view_path($v){if(!$this->view_exists($v)){return F;}$f='/views/'.self::$s.self::$p.$v.EXT;$f=defined('MODBASE')?MODBASE.$this->C->uri->segment(2).'/'.$f:APPPATH.$f;return realpath($f);}public function set_dir($d){if(!is_string($d)){return F;}$d=trim($d,'/');$p=APPPATH.'/views/'.$d;if(!is_dir($p)){return F;}self::$s=$d;return T;}public function set_prefix($p){if(!$this->is_varname($p)){return F;}self::$p=$p;return T;}protected function lv($v,$vs=array(),$r=T){if(!is_string($v)||!$this->view_exists($v)){return F;}${'1v'}=$this->view_path($v);${'1r'}=$r;unset($v,$r);extract($vs,EXTR_OVERWRITE);ob_start();include ${'1v'};log_message('debug','File loaded (as view): '.${'1v'});$o=ob_get_contents();ob_end_clean();if(${'1r'}){return $o;}echo $o;}}class Template extends Template_Base{protected $l=array(),$q=array(),$x=F,$al=T,$u=F,$c='Template_Section';public $C;public function __construct($p=F){log_message('debug','Template Class Initialized');$this->C=&get_instance();if(is_array($p)){if(isset($p['config'])){$this->autoload($p['config']);}if(isset($p['subdir'])){$this->set_dir($p['subdir']);}if(isset($p['prefix'])){$this->set_prefix($p['prefix']);}if(isset($p['autolink'])){$this->autolink($p['autolink']);}}}public function section_exists($s){if(is_object($s)){$s=$this->section_name($s);}if(!is_string($s)){return F;}return isset($this->q[$s]);}protected function section_name($s){if(is_string($s)){return $s;}if(!is_object($s)||!($s instanceof $this->c)||get_class($s)!=$this->c){return F;}return $s->name();}public function autolink($b){$this->al=$b?T:F;}public function propagate($b){$this->u=$b?T:F;}public function autoload($c='template'){if(!is_array($c)){if(!is_string($c)||!is_array($c=get_config($c))){return F;}}if(isset($c['set_dir'])&&is_string($c['set_dir'])){$this->set_dir($c['set_dir']);}if(isset($c['set_prefix'])&&is_string($c['set_prefix'])){$this->set_prefix($c['set_prefix']);}if(isset($c['create'])&&is_array($c['create'])){$this->create($c['create']);}if(isset($c['group'])&&is_array($c['group'])){foreach($c['group'] as $g=>$s){if(is_string($g)&&is_array($s)){$this->group($g,$s);}}}if(isset($c['add'])&&is_array($c['add'])){foreach($c['add'] as $s=>$d){if(is_string($s)&&$this->section_exists($s)&&is_array($d)){$this->section($s)->add($d);}}}if(isset($c['autolink'])&&is_bool($c['autolink'])){$this->autolink($c['autolink']);}if(!$this->al&&isset($c['link'])&&is_array($c['link'])){$this->link($c['link']);}return T;}public function create(){$a=func_get_args();switch(func_num_args()){case 1:if(!is_array($a[0])){if(!is_object($a[0])&&!is_string($a[0])){return;}$a[0]=(array)$a[0];}break;case 2:if(!is_string($a[0])||!is_string($a[1])){return;}$a[0]=array($a[0]=>$a[1]);break;default:return F;break;}foreach($a[0] as $n=>$v){if($this->section_exists($n)){continue;}$n=is_int($n)?$v:$n;if(!$this->is_varname($n)){continue;}if(!$this->view_exists($v)){continue;}$this->q[$n]=new $this->c($n,$v);$this->x=$n;}}public function acreate(){$a=func_get_args();switch(func_num_args()){case 1:if(!is_array($a[0])){if(!is_object($a[0])){return;}$a[0]=(array)$a[0];}break;case 2:if(!is_string($a[0])||!is_string($a[1])){return;}$a[0]=array($a[0]=>$a[1]);break;default:return F;break;}foreach($a[0] as $n=>$c){if(!is_string($n)||!is_string($c)||$this->section_exists($n)||!$this->is_varname($n)){continue;}$this->q[$n]=new $this->c($n,F,$c);}}public function active($s){$s=$this->section_name($s);if(!$this->section_exists($s)){return F;}$this->x=$s;return T;}public function section($s=T){if($s===T&&isset($this->q[$this->x])){return $this->q[$this->x];}$s=$this->section_name($s);if(isset($this->q[$s])){return $this->q[$s];}return F;}public function link($l){if(!is_array($l)){return;}foreach($l as $s=>$i){if(!$this->section_exists($s)){continue;}$s=$this->section_name($s);$i=(array)$i;if(!isset($this->l[$s])||!is_array($this->l[$s])){$this->l[$s]=array();}foreach($i as $j){$j=$this->section_name($j);if(!$this->section_exists($j)||in_array($j,$this->l[$s])){continue;}$this->l[$s][]=$j;}}}public function group($n,$s){if($this->section_exists($n)||!$this->is_varname($n)||!is_array($s)){return F;}$this->q[$n]=array();foreach($s as $t){$t=$this->section_name($t);if($this->section_exists($t)&&is_object($this->section($t))){$this->q[$n][]=$t;}}return T;}public function agroup($n,$v,$d=array()){if($this->section_exists($n)||!$this->is_varname($n)||!is_array($d)){return F;}if(!$this->view_exists($v)){return F;}$this->q[$n]=array();foreach($d as $s){if(is_object($s)){$s=(array)$s;}if(!is_array($s)){continue;}do{$h='_section_'.md5(microtime());}while($this->section_exists($h));$this->create(array($h=>$v));$this->section($h)->add($s);$this->q[$n][]=$h;}return T;}public function join($g,$s){if(is_string($s)){$s=array($s);}if(!$this->section_exists($g)||!is_array($this->q[$g])||!is_array($s)){return F;}foreach($s as $t){if($this->section_exists($t)){$this->q[$g][]=$t;}}return T;}public function ajoin($g,$v,$d=array()){if(!isset($this->q[$g])||!is_array($this->q[$g])||!is_array($d)||!$this->view_exists($v)){return F;}foreach($d as $s){if(is_object($s)){$s=(array)$s;}if(!is_array($s)){continue;}do{$h='_section_'.md5(microtime());}while($this->section_exists($h));$this->create(array($h=>$v));$this->section($h)->add($s);$this->q[$g][]=$h;}return T;}protected function combine($s,$l=1,$d=array()){if(!$this->section_exists($s)||!is_int($l)||$l<0||!is_array($d)){return F;}$t=is_array($this->q[$s])?$this->q[$s]:array($this->section($s)->name());if($l===0){$l=count($t);}array_splice($t,$l);$z=array();foreach($t as $s){if(!$this->section_exists($s)||!is_object($this->section($s))){continue;}if($this->al){$this->_autolink($s);}$e=$this->u?$this->section($s)->data($d):array();$c=$this->section($s)->content();if(isset($this->l[$s])&&is_array($this->l[$s])){foreach($this->l[$s] as $k){if(!$this->section_exists($k)){continue;}$r='/\<\!--\s*\{('.preg_quote($k,'/').')(\[([0-9]+)?\])?\}\s*--\>/';if(preg_match_all($r,$c,$n,PREG_SET_ORDER)){foreach($n as $m){$n=1;if(isset($m[2])){$n=isset($m[3])?(int)$m[3]:0;}$c=str_replace($m[0],$this->combine($k,$n,$e),$c);}}}}$z[]=$c;}return implode('',$z);}protected function _autolink($s){if(!$this->section_exists($s)){return F;}$s=$this->section_name($s);$c=$this->section($s)->content();$r='/\<\!--\s*\{('.$this->r.')(\[([0-9]+)?\])?\}\s*--\>/';if(preg_match_all($r,$c,$p,PREG_SET_ORDER)){$l=array();foreach($p as $m){$l[]=$m[1];}$this->link(array($s=>$l,));}return T;}public function load($s,$r=F){$s=$this->section_name($s);if(!$this->section_exists($s)||!is_object($this->section($s))){return F;}$m=microtime(T);$d=$this->combine($s);if(!is_string($d)){return F;}if(is_float($m)){$d=str_replace('{render_time}',(string)round(microtime(T)-$m,4),$d);}if($r){log_message('debug','Template Class Returned Output'.$s);return $d;}if(isset($this->C->output)&&is_object($this->C->output)&&method_exists($this->C->output,'append_output')){$this->C->output->append_output($d);}else{echo $d;}log_message('debug','Template Class Sent Output: '.$s);return T;}}class Template_Section extends Template_Base{protected $n=F,$d=array(),$v=F,$u=F,$C;public function __construct($n,$v,$c=F){if(is_string($this->n)){return;}$this->n=$n;if(is_string($v)){$this->v=$v;}else{$this->u=$c;}$this->C=&get_instance();}public function name(){return $this->n;}public function view(){return $this->v;}public function data($p=F){if(is_array($p)){foreach($p as $v=>$l){if(!isset($this->d[$v])&&$this->is_varname($v)){$this->d[$v]=$l;}}}return $this->d;}public function content(){$c=is_string($this->v)?$this->C->load->view($this->v,$this->d,T):$this->u;$c=str_replace(array('{section_name}','{view_name}'),array($this->n,$this->v),$c);return $c;}public function add(){$a=func_get_args();switch(func_num_args()){case 1:if(!is_array($a[0])){if(!is_object($a[0])){return F;}$a[0]=(array)$a[0];}break;case 2:$a[0]=array($a[0]=>$a[1]);break;default:return F;break;}foreach($a[0] as $v=>$l){if(!$this->is_varname($v)){continue;}$this->d[$v]=$l;}return T;}public function __toString(){return $this->C->template->load($this->n,T);}public function __invoke(){return call_user_func_array(array($this,'add'),func_get_args());}}